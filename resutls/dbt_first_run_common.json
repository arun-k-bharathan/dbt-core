[
    {
        "macro_name": "dbt_macro__generate_database_name",
        "macro_arguments": "('custom_database_name', 'node')",
        "args": "(None, ModelNode(database='airbnb', schema='dev', name='src_hosts', resource_type=<NodeType.Model: 'model'>, package_name='dbtlearn', path='src/src_hosts.sql', original_file_path='models/src/src_hosts.sql', unique_id='model.dbtlearn.src_hosts', fqn=['dbtlearn', 'src', 'src_hosts'], alias='src_hosts', checksum=FileHash(name='sha256', checksum='28b8a2b582ace198d595b29199f23d5fa98680340fa8fde4e579ef70ffee7cca'), config=NodeConfig(_extra={}, enabled=True, alias=None, schema=None, database=None, tags=[], meta={}, group=None, materialized='table', incremental_strategy=None, persist_docs={}, post_hook=[], pre_hook=[], quoting={}, column_types={}, full_refresh=None, unique_key=None, on_schema_change='ignore', on_configuration_change=<OnConfigurationChangeOption.Apply: 'apply'>, grants={}, packages=[], docs=Docs(show=True, node_color=None), contract=ContractConfig(enforced=False)), _event_status={}, tags=[], description='', columns={}, meta={}, group=None, docs=Docs(show=True, node_color=None), patch_path=None, build_path=None, deferred=False, unrendered_config={'materialized': 'table'}, created_at=1693813674.9482226, config_call_dict={'materialized': 'table'}, relation_name=None, raw_code=\"{{config(materialized = 'table')}}\\nWITH raw_hosts AS (\\n        SELECT *\\n        FROM\\n{{source('airbnb', 'hosts')}}\\n    )\\nSELECT\\n    id AS host_id,\\n    NAME AS host_name,\\n    is_superhost,\\n    created_at,\\n    updated_at\\nFROM raw_hosts\", language=<ModelLanguage.sql: 'sql'>, refs=[], sources=[], metrics=[], depends_on=DependsOn(macros=[], nodes=[]), compiled_path=None, compiled=False, compiled_code=None, extra_ctes_injected=False, extra_ctes=[], _pre_injected_sql=None, contract=Contract(enforced=False, checksum=None), access=<AccessType.Protected: 'protected'>, constraints=[], version=None, latest_version=None, deprecation_date=None, defer_relation=None))",
        "kwargs": "{}"
    },
    {
        "macro_name": "dbt_macro__default__generate_database_name",
        "macro_arguments": "('custom_database_name', 'node')",
        "args": "(None, ModelNode(database='airbnb', schema='dev', name='src_hosts', resource_type=<NodeType.Model: 'model'>, package_name='dbtlearn', path='src/src_hosts.sql', original_file_path='models/src/src_hosts.sql', unique_id='model.dbtlearn.src_hosts', fqn=['dbtlearn', 'src', 'src_hosts'], alias='src_hosts', checksum=FileHash(name='sha256', checksum='28b8a2b582ace198d595b29199f23d5fa98680340fa8fde4e579ef70ffee7cca'), config=NodeConfig(_extra={}, enabled=True, alias=None, schema=None, database=None, tags=[], meta={}, group=None, materialized='table', incremental_strategy=None, persist_docs={}, post_hook=[], pre_hook=[], quoting={}, column_types={}, full_refresh=None, unique_key=None, on_schema_change='ignore', on_configuration_change=<OnConfigurationChangeOption.Apply: 'apply'>, grants={}, packages=[], docs=Docs(show=True, node_color=None), contract=ContractConfig(enforced=False)), _event_status={}, tags=[], description='', columns={}, meta={}, group=None, docs=Docs(show=True, node_color=None), patch_path=None, build_path=None, deferred=False, unrendered_config={'materialized': 'table'}, created_at=1693813674.9482226, config_call_dict={'materialized': 'table'}, relation_name=None, raw_code=\"{{config(materialized = 'table')}}\\nWITH raw_hosts AS (\\n        SELECT *\\n        FROM\\n{{source('airbnb', 'hosts')}}\\n    )\\nSELECT\\n    id AS host_id,\\n    NAME AS host_name,\\n    is_superhost,\\n    created_at,\\n    updated_at\\nFROM raw_hosts\", language=<ModelLanguage.sql: 'sql'>, refs=[], sources=[], metrics=[], depends_on=DependsOn(macros=[], nodes=[]), compiled_path=None, compiled=False, compiled_code=None, extra_ctes_injected=False, extra_ctes=[], _pre_injected_sql=None, contract=Contract(enforced=False, checksum=None), access=<AccessType.Protected: 'protected'>, constraints=[], version=None, latest_version=None, deprecation_date=None, defer_relation=None))",
        "kwargs": "{}"
    },
    {
        "macro_name": "dbt_macro__generate_schema_name",
        "macro_arguments": "('custom_schema_name', 'node')",
        "args": "(None, ModelNode(database='airbnb', schema='dev', name='src_hosts', resource_type=<NodeType.Model: 'model'>, package_name='dbtlearn', path='src/src_hosts.sql', original_file_path='models/src/src_hosts.sql', unique_id='model.dbtlearn.src_hosts', fqn=['dbtlearn', 'src', 'src_hosts'], alias='src_hosts', checksum=FileHash(name='sha256', checksum='28b8a2b582ace198d595b29199f23d5fa98680340fa8fde4e579ef70ffee7cca'), config=NodeConfig(_extra={}, enabled=True, alias=None, schema=None, database=None, tags=[], meta={}, group=None, materialized='table', incremental_strategy=None, persist_docs={}, post_hook=[], pre_hook=[], quoting={}, column_types={}, full_refresh=None, unique_key=None, on_schema_change='ignore', on_configuration_change=<OnConfigurationChangeOption.Apply: 'apply'>, grants={}, packages=[], docs=Docs(show=True, node_color=None), contract=ContractConfig(enforced=False)), _event_status={}, tags=[], description='', columns={}, meta={}, group=None, docs=Docs(show=True, node_color=None), patch_path=None, build_path=None, deferred=False, unrendered_config={'materialized': 'table'}, created_at=1693813674.9482226, config_call_dict={'materialized': 'table'}, relation_name=None, raw_code=\"{{config(materialized = 'table')}}\\nWITH raw_hosts AS (\\n        SELECT *\\n        FROM\\n{{source('airbnb', 'hosts')}}\\n    )\\nSELECT\\n    id AS host_id,\\n    NAME AS host_name,\\n    is_superhost,\\n    created_at,\\n    updated_at\\nFROM raw_hosts\", language=<ModelLanguage.sql: 'sql'>, refs=[], sources=[], metrics=[], depends_on=DependsOn(macros=[], nodes=[]), compiled_path=None, compiled=False, compiled_code=None, extra_ctes_injected=False, extra_ctes=[], _pre_injected_sql=None, contract=Contract(enforced=False, checksum=None), access=<AccessType.Protected: 'protected'>, constraints=[], version=None, latest_version=None, deprecation_date=None, defer_relation=None))",
        "kwargs": "{}"
    },
    {
        "macro_name": "dbt_macro__default__generate_schema_name",
        "macro_arguments": "('custom_schema_name', 'node')",
        "args": "(None, ModelNode(database='airbnb', schema='dev', name='src_hosts', resource_type=<NodeType.Model: 'model'>, package_name='dbtlearn', path='src/src_hosts.sql', original_file_path='models/src/src_hosts.sql', unique_id='model.dbtlearn.src_hosts', fqn=['dbtlearn', 'src', 'src_hosts'], alias='src_hosts', checksum=FileHash(name='sha256', checksum='28b8a2b582ace198d595b29199f23d5fa98680340fa8fde4e579ef70ffee7cca'), config=NodeConfig(_extra={}, enabled=True, alias=None, schema=None, database=None, tags=[], meta={}, group=None, materialized='table', incremental_strategy=None, persist_docs={}, post_hook=[], pre_hook=[], quoting={}, column_types={}, full_refresh=None, unique_key=None, on_schema_change='ignore', on_configuration_change=<OnConfigurationChangeOption.Apply: 'apply'>, grants={}, packages=[], docs=Docs(show=True, node_color=None), contract=ContractConfig(enforced=False)), _event_status={}, tags=[], description='', columns={}, meta={}, group=None, docs=Docs(show=True, node_color=None), patch_path=None, build_path=None, deferred=False, unrendered_config={'materialized': 'table'}, created_at=1693813674.9482226, config_call_dict={'materialized': 'table'}, relation_name=None, raw_code=\"{{config(materialized = 'table')}}\\nWITH raw_hosts AS (\\n        SELECT *\\n        FROM\\n{{source('airbnb', 'hosts')}}\\n    )\\nSELECT\\n    id AS host_id,\\n    NAME AS host_name,\\n    is_superhost,\\n    created_at,\\n    updated_at\\nFROM raw_hosts\", language=<ModelLanguage.sql: 'sql'>, refs=[], sources=[], metrics=[], depends_on=DependsOn(macros=[], nodes=[]), compiled_path=None, compiled=False, compiled_code=None, extra_ctes_injected=False, extra_ctes=[], _pre_injected_sql=None, contract=Contract(enforced=False, checksum=None), access=<AccessType.Protected: 'protected'>, constraints=[], version=None, latest_version=None, deprecation_date=None, defer_relation=None))",
        "kwargs": "{}"
    },
    {
        "macro_name": "dbt_macro__generate_alias_name",
        "macro_arguments": "('custom_alias_name', 'node')",
        "args": "(None, ModelNode(database='airbnb', schema='dev', name='src_hosts', resource_type=<NodeType.Model: 'model'>, package_name='dbtlearn', path='src/src_hosts.sql', original_file_path='models/src/src_hosts.sql', unique_id='model.dbtlearn.src_hosts', fqn=['dbtlearn', 'src', 'src_hosts'], alias='src_hosts', checksum=FileHash(name='sha256', checksum='28b8a2b582ace198d595b29199f23d5fa98680340fa8fde4e579ef70ffee7cca'), config=NodeConfig(_extra={}, enabled=True, alias=None, schema=None, database=None, tags=[], meta={}, group=None, materialized='table', incremental_strategy=None, persist_docs={}, post_hook=[], pre_hook=[], quoting={}, column_types={}, full_refresh=None, unique_key=None, on_schema_change='ignore', on_configuration_change=<OnConfigurationChangeOption.Apply: 'apply'>, grants={}, packages=[], docs=Docs(show=True, node_color=None), contract=ContractConfig(enforced=False)), _event_status={}, tags=[], description='', columns={}, meta={}, group=None, docs=Docs(show=True, node_color=None), patch_path=None, build_path=None, deferred=False, unrendered_config={'materialized': 'table'}, created_at=1693813674.9482226, config_call_dict={'materialized': 'table'}, relation_name=None, raw_code=\"{{config(materialized = 'table')}}\\nWITH raw_hosts AS (\\n        SELECT *\\n        FROM\\n{{source('airbnb', 'hosts')}}\\n    )\\nSELECT\\n    id AS host_id,\\n    NAME AS host_name,\\n    is_superhost,\\n    created_at,\\n    updated_at\\nFROM raw_hosts\", language=<ModelLanguage.sql: 'sql'>, refs=[], sources=[], metrics=[], depends_on=DependsOn(macros=[], nodes=[]), compiled_path=None, compiled=False, compiled_code=None, extra_ctes_injected=False, extra_ctes=[], _pre_injected_sql=None, contract=Contract(enforced=False, checksum=None), access=<AccessType.Protected: 'protected'>, constraints=[], version=None, latest_version=None, deprecation_date=None, defer_relation=None))",
        "kwargs": "{}"
    },
    {
        "macro_name": "dbt_macro__default__generate_alias_name",
        "macro_arguments": "('custom_alias_name', 'node')",
        "args": "(None, ModelNode(database='airbnb', schema='dev', name='src_hosts', resource_type=<NodeType.Model: 'model'>, package_name='dbtlearn', path='src/src_hosts.sql', original_file_path='models/src/src_hosts.sql', unique_id='model.dbtlearn.src_hosts', fqn=['dbtlearn', 'src', 'src_hosts'], alias='src_hosts', checksum=FileHash(name='sha256', checksum='28b8a2b582ace198d595b29199f23d5fa98680340fa8fde4e579ef70ffee7cca'), config=NodeConfig(_extra={}, enabled=True, alias=None, schema=None, database=None, tags=[], meta={}, group=None, materialized='table', incremental_strategy=None, persist_docs={}, post_hook=[], pre_hook=[], quoting={}, column_types={}, full_refresh=None, unique_key=None, on_schema_change='ignore', on_configuration_change=<OnConfigurationChangeOption.Apply: 'apply'>, grants={}, packages=[], docs=Docs(show=True, node_color=None), contract=ContractConfig(enforced=False)), _event_status={}, tags=[], description='', columns={}, meta={}, group=None, docs=Docs(show=True, node_color=None), patch_path=None, build_path=None, deferred=False, unrendered_config={'materialized': 'table'}, created_at=1693813674.9482226, config_call_dict={'materialized': 'table'}, relation_name=None, raw_code=\"{{config(materialized = 'table')}}\\nWITH raw_hosts AS (\\n        SELECT *\\n        FROM\\n{{source('airbnb', 'hosts')}}\\n    )\\nSELECT\\n    id AS host_id,\\n    NAME AS host_name,\\n    is_superhost,\\n    created_at,\\n    updated_at\\nFROM raw_hosts\", language=<ModelLanguage.sql: 'sql'>, refs=[], sources=[], metrics=[], depends_on=DependsOn(macros=[], nodes=[]), compiled_path=None, compiled=False, compiled_code=None, extra_ctes_injected=False, extra_ctes=[], _pre_injected_sql=None, contract=Contract(enforced=False, checksum=None), access=<AccessType.Protected: 'protected'>, constraints=[], version=None, latest_version=None, deprecation_date=None, defer_relation=None))",
        "kwargs": "{}"
    }
]
